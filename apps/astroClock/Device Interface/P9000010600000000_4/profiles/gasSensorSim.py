# Copyright (C) 2013-2021 Echelon Corporation.  All Rights Reserved.
# Use of this code is subject to your compliance with the terms of the
# Echelon IzoT(tm) Software Developer's Kit License Agreement which is
# available at www.echelon.com/license/izot_sdk/.

# IzoT resources contained in this file are generated by an automated
# database to source code conversion process.  Grammar and punctuation within
# the embedded documentation may not be correct, as this data is gathered and
# combined from several sources.
# Names of resources and fields or members defined within a resource are
# derived from the same sources.  Names, capitalization and aspects of source
# code formatting may fail to comply with PEP-8 and PEP-257 recommendations
# due to the automated generation of these IzoT definitions.
# Generated at 25-Aug-2021 13:17.

"""gasSensorSim userdefined profile, originally defined in resource file set
apollodev 90:00:01:06:00:00:00:00-4."""


import izot.resources.base
from P9000010600000000_4.userdefined import userdefined
import P9000010600000000_4.datapoints.Sensor
import P9000010600000000_4.datapoints.FmkSetup
import izot.resources.datapoints.state


class gasSensorSim(izot.resources.base.Profile):
    """gasSensorSim userdefined profile.  """

    def __init__(self):
        super().__init__(
            key=20016,
            scope=4
        )
        self.datapoints['nvoSensor'] = izot.resources.base.Profile.DatapointMember(
            doc="""Boolean """,
            name='nvoSensor',
            profile=self,
            number=1,
            datatype=P9000010600000000_4.datapoints.Sensor.Sensor,
            mandatory=True,
            direction=izot.resources.base.Profile.DatapointMember.OUTPUT
        )
        self.datapoints['nvoSetup'] = izot.resources.base.Profile.DatapointMember(
            doc="""Scaling data.  """,
            name='nvoSetup',
            profile=self,
            number=2,
            datatype=P9000010600000000_4.datapoints.FmkSetup.FmkSetup,
            mandatory=True,
            direction=izot.resources.base.Profile.DatapointMember.OUTPUT
        )
        self.datapoints['nviStateTest'] = izot.resources.base.Profile.DatapointMember(
            doc="""State vector.  Each state is a boolean single bit value.
            SNVT_state_64 is preferred.""",
            name='nviStateTest',
            profile=self,
            number=3,
            datatype=izot.resources.datapoints.state.state,
            mandatory=True,
            direction=izot.resources.base.Profile.DatapointMember.INPUT
        )
        self.datapoints['nvoState'] = izot.resources.base.Profile.DatapointMember(
            doc="""State vector.  Each state is a boolean single bit value.
            SNVT_state_64 is preferred.""",
            name='nvoState',
            profile=self,
            number=4,
            datatype=izot.resources.datapoints.state.state,
            mandatory=True,
            direction=izot.resources.base.Profile.DatapointMember.OUTPUT
        )
        self.datapoints['nviErrorTest'] = izot.resources.base.Profile.DatapointMember(
            doc="""State vector.  Each state is a boolean single bit value.
            SNVT_state_64 is preferred.""",
            name='nviErrorTest',
            profile=self,
            number=5,
            datatype=izot.resources.datapoints.state.state,
            mandatory=True,
            direction=izot.resources.base.Profile.DatapointMember.INPUT
        )
        self.datapoints['nvoError'] = izot.resources.base.Profile.DatapointMember(
            doc="""State vector.  Each state is a boolean single bit value.
            SNVT_state_64 is preferred.""",
            name='nvoError',
            profile=self,
            number=6,
            datatype=izot.resources.datapoints.state.state,
            mandatory=True,
            direction=izot.resources.base.Profile.DatapointMember.OUTPUT
        )
        self._original_name = 'UFPTgasSensorSim'
        self._definition = userdefined.add(self)
        self.finalize()


if __name__ == '__main__':
    # unit test code.
    item = gasSensorSim()
    pass
