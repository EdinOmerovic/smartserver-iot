# Copyright (C) 2013-2023 Echelon Corporation.  All Rights Reserved.
# Use of this code is subject to your compliance with the terms of the
# Echelon IzoT(tm) Software Developer's Kit License Agreement which is
# available at www.echelon.com/license/izot_sdk/.

# IzoT resources contained in this file are generated by an automated
# database to source code conversion process.  Grammar and punctuation within
# the embedded documentation may not be correct, as this data is gathered and
# combined from several sources.
# Names of resources and fields or members defined within a resource are
# derived from the same sources.  Names, capitalization and aspects of source
# code formatting may fail to comply with PEP-8 and PEP-257 recommendations
# due to the automated generation of these IzoT definitions.
# Generated at 11-May-2023 17:11.

"""channelStats userdefined profile, originally defined in resource file set
apollodev 90:00:01:06:00:00:00:00-4."""


import izot.resources.base
from P9000010600000000_4.userdefined import userdefined
import P9000010600000000_4.datapoints.ifcData
import P9000010600000000_4.datapoints.waterMark
import P9000010600000000_4.datapoints.ifcTraffic
import izot.resources.datapoints.alarm_2
import P9000010600000000_4.datapoints.ifcFlow
import P9000010600000000_4.properties.interface
import P9000010600000000_4.properties.sampleRate
import P9000010600000000_4.properties.enable
import P9000010600000000_4.properties.channelLimits


class channelStats(izot.resources.base.Profile):
    """channelStats userdefined profile.  """

    def __init__(self):
        super().__init__(
            key=20021,
            scope=4,
            principal='ifcData_o'
        )
        self.datapoints['ifcData_o'] = izot.resources.base.Profile.DatapointMember(
            doc=""" """,
            name='ifcData_o',
            profile=self,
            number=1,
            datatype=P9000010600000000_4.datapoints.ifcData.ifcData,
            mandatory=True,
            direction=izot.resources.base.Profile.DatapointMember.OUTPUT
        )
        self.datapoints['HighWater_o'] = izot.resources.base.Profile.DatapointMember(
            doc=""" """,
            name='HighWater_o',
            profile=self,
            number=2,
            datatype=P9000010600000000_4.datapoints.waterMark.waterMark,
            mandatory=True,
            direction=izot.resources.base.Profile.DatapointMember.OUTPUT
        )
        self.datapoints['LowWater_o'] = izot.resources.base.Profile.DatapointMember(
            doc=""" """,
            name='LowWater_o',
            profile=self,
            number=3,
            datatype=P9000010600000000_4.datapoints.waterMark.waterMark,
            mandatory=True,
            direction=izot.resources.base.Profile.DatapointMember.OUTPUT
        )
        self.datapoints['ifcTraffic_o'] = izot.resources.base.Profile.DatapointMember(
            doc=""" """,
            name='ifcTraffic_o',
            profile=self,
            number=4,
            datatype=P9000010600000000_4.datapoints.ifcTraffic.ifcTraffic,
            mandatory=True,
            direction=izot.resources.base.Profile.DatapointMember.OUTPUT
        )
        self.datapoints['Alarm_o'] = izot.resources.base.Profile.DatapointMember(
            doc="""Alarm status 2.  Used to report alarm status for a
            functional block or device.  Replaces SNVT_alarm.""",
            name='Alarm_o',
            profile=self,
            number=5,
            datatype=izot.resources.datapoints.alarm_2.alarm_2,
            mandatory=True,
            direction=izot.resources.base.Profile.DatapointMember.INPUT
        )
        self.datapoints['ifcFlow_o'] = izot.resources.base.Profile.DatapointMember(
            doc=""" Aggregate packet flow RX + TX.""",
            name='ifcFlow_o',
            profile=self,
            number=6,
            datatype=P9000010600000000_4.datapoints.ifcFlow.ifcFlow,
            mandatory=True,
            direction=izot.resources.base.Profile.DatapointMember.OUTPUT
        )
        self.properties['cpInterface'] = izot.resources.base.Profile.PropertyMember(
            doc=""" """,
            name='cpInterface',
            profile=self,
            number=1,
            datatype=P9000010600000000_4.properties.interface.interface,
            default=b'\x6c\x6f\x6e\x30\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
                b'\x00\x00\x00\x00\x00',
            mandatory=True
        )
        self.properties['cpSampleRate'] = izot.resources.base.Profile.PropertyMember(
            doc=""" """,
            name='cpSampleRate',
            profile=self,
            number=2,
            datatype=P9000010600000000_4.properties.sampleRate.sampleRate,
            default=b'\x01\x2c',
            mandatory=True
        )
        self.properties['cpEnable'] = izot.resources.base.Profile.PropertyMember(
            doc=""" """,
            name='cpEnable',
            profile=self,
            number=3,
            datatype=P9000010600000000_4.properties.enable.enable,
            default=b'\x00',
            mandatory=True
        )
        self.properties['cpAlarmLimits'] = izot.resources.base.Profile.PropertyMember(
            doc=""" """,
            name='cpAlarmLimits',
            profile=self,
            number=4,
            datatype=P9000010600000000_4.properties.channelLimits.channelLimits,
            default=b'\x00\x00\x00\x00\x00\x00\x00\x00',
            mandatory=True
        )
        self._original_name = 'UFPTchannelStats'
        self._definition = userdefined.add(self)
        self.finalize()


if __name__ == '__main__':
    # unit test code.
    item = channelStats()
    pass
