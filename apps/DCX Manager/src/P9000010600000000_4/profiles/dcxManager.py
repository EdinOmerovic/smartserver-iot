# Copyright (C) 2013-2023 Echelon Corporation.  All Rights Reserved.
# Use of this code is subject to your compliance with the terms of the
# Echelon IzoT(tm) Software Developer's Kit License Agreement which is
# available at www.echelon.com/license/izot_sdk/.

# IzoT resources contained in this file are generated by an automated
# database to source code conversion process.  Grammar and punctuation within
# the embedded documentation may not be correct, as this data is gathered and
# combined from several sources.
# Names of resources and fields or members defined within a resource are
# derived from the same sources.  Names, capitalization and aspects of source
# code formatting may fail to comply with PEP-8 and PEP-257 recommendations
# due to the automated generation of these IzoT definitions.
# Generated at 11-May-2023 17:11.

"""dcxManager userdefined profile, originally defined in resource file set
apollodev 90:00:01:06:00:00:00:00-4."""


import izot.resources.base
from P9000010600000000_4.userdefined import userdefined
import izot.resources.datapoints.switch
import izot.resources.datapoints.count_32
import izot.resources.properties.delayTime
import P9000010600000000_4.properties.defaultLevel
import P9000010600000000_4.properties.offSequence


class dcxManager(izot.resources.base.Profile):
    """dcxManager userdefined profile.  """

    def __init__(self):
        super().__init__(
            key=20035,
            scope=4
        )
        self.datapoints['iLocalOvrd'] = izot.resources.base.Profile.DatapointMember(
            doc="""Switch """,
            name='iLocalOvrd',
            profile=self,
            number=1,
            datatype=izot.resources.datapoints.switch.switch,
            mandatory=True,
            direction=izot.resources.base.Profile.DatapointMember.INPUT
        )
        self.datapoints['iSched'] = izot.resources.base.Profile.DatapointMember(
            doc="""Switch """,
            name='iSched',
            profile=self,
            number=2,
            datatype=izot.resources.datapoints.switch.switch,
            mandatory=True,
            direction=izot.resources.base.Profile.DatapointMember.INPUT
        )
        self.datapoints['oSegmentSw'] = izot.resources.base.Profile.DatapointMember(
            doc="""Switch """,
            name='oSegmentSw',
            profile=self,
            number=3,
            datatype=izot.resources.datapoints.switch.switch,
            mandatory=True,
            direction=izot.resources.base.Profile.DatapointMember.OUTPUT
        )
        self.datapoints['oGroupSw'] = izot.resources.base.Profile.DatapointMember(
            doc="""Switch """,
            name='oGroupSw',
            profile=self,
            number=4,
            datatype=izot.resources.datapoints.switch.switch,
            mandatory=True,
            direction=izot.resources.base.Profile.DatapointMember.OUTPUT
        )
        self.datapoints['oUpTime'] = izot.resources.base.Profile.DatapointMember(
            doc="""Absolute count.  A 32-bit counter.""",
            name='oUpTime',
            profile=self,
            number=5,
            datatype=izot.resources.datapoints.count_32.count_32,
            mandatory=True,
            direction=izot.resources.base.Profile.DatapointMember.OUTPUT
        )
        self.datapoints['oRestarts'] = izot.resources.base.Profile.DatapointMember(
            doc="""Absolute count.  A 32-bit counter.""",
            name='oRestarts',
            profile=self,
            number=6,
            datatype=izot.resources.datapoints.count_32.count_32,
            mandatory=True,
            direction=izot.resources.base.Profile.DatapointMember.OUTPUT
        )
        self.properties['cpGroupDelay'] = izot.resources.base.Profile.PropertyMember(
            doc="""Delay time, default to scene.  The delay time, default to
            scene.""",
            name='cpGroupDelay',
            profile=self,
            number=1,
            datatype=izot.resources.properties.delayTime.delayTime,
            default=b'\x02\x58',
            mandatory=True
        )
        self.properties['cpDefLevel'] = izot.resources.base.Profile.PropertyMember(
            doc=""" """,
            name='cpDefLevel',
            profile=self,
            number=2,
            datatype=P9000010600000000_4.properties.defaultLevel.defaultLevel,
            default=b'\xc8',
            mandatory=True
        )
        self.properties['cpOffSequence'] = izot.resources.base.Profile.PropertyMember(
            doc=""" """,
            name='cpOffSequence',
            profile=self,
            number=3,
            datatype=P9000010600000000_4.properties.offSequence.offSequence,
            default=b'\x00',
            mandatory=True
        )
        self._original_name = 'UFPTdcxManager'
        self._definition = userdefined.add(self)
        self.finalize()


if __name__ == '__main__':
    # unit test code.
    item = dcxManager()
    pass
