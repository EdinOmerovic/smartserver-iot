# Copyright (C) 2013-2023 Echelon Corporation.  All Rights Reserved.
# Use of this code is subject to your compliance with the terms of the
# Echelon IzoT(tm) Software Developer's Kit License Agreement which is
# available at www.echelon.com/license/izot_sdk/.

# IzoT resources contained in this file are generated by an automated
# database to source code conversion process.  Grammar and punctuation within
# the embedded documentation may not be correct, as this data is gathered and
# combined from several sources.
# Names of resources and fields or members defined within a resource are
# derived from the same sources.  Names, capitalization and aspects of source
# code formatting may fail to comply with PEP-8 and PEP-257 recommendations
# due to the automated generation of these IzoT definitions.
# Generated at 11-May-2023 17:11.

"""offSequence userdefined enumeration type, originally defined in resource
file set apollodev 90:00:01:06:00:00:00:00-4."""


import izot.resources.base
from P9000010600000000_4.userdefined import userdefined


class offSequence(izot.resources.base.Enumeration):
    """offSequence userdefined enumeration."""

    MEM_NUL = -1

    # NOTE member OFF_BY_POWER was renamed to MEM_BY_POWER to obtain a common
    # prefix throughout this enumeration.
    # Switch power without commanding OLC.
    MEM_BY_POWER = 0

    # NOTE member OFF_BY_CMD was renamed to MEM_BY_CMD to obtain a common
    # prefix throughout this enumeration.
    # Allow for command before switch power.
    MEM_BY_CMD = 1

    # NOTE member OFF_WITH_DEFAULT was renamed to MEM_WITH_DEFAULT to obtain
    # a common prefix throughout this enumeration.
    # Send a default level before switching power.
    MEM_WITH_DEFAULT = 2

    def __init__(self):
        super().__init__(
            key=10,
            scope=4,
            prefix='MEM_'
        )
        self._original_name = 'offSequence'
        self._definition = userdefined.add(self)


if __name__ == '__main__':
    # unit test code.
    item = offSequence()
    pass
